{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","helpers/prepareEvents.js","actions/calendar.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","helpers/center-modal-styles.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","checkingFinish","login","user","logout","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventLoaded","Navbar","name","useSelector","dispatch","useDispatch","className","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","notes","CalendarModal","useState","titleValid","setTitleValid","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","test","a","resp","json","ok","msg","console","log","getState","uid","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","view","components","onSelectSlot","selectable","useForm","form","setForm","reset","LoginScreen","email","password","Date","getTime","startLogin","to","RegisterScreen","passwordConfirm","startRegister","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","width","role","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e17b8dc.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventAddNew: '[calendar] Add new',\r\n    eventStartAddNew: '[calendar] Start add new',\r\n    eventSetActive: '[calendar] Set active',\r\n    eventLogout: '[calendar] Clean events logout',\r\n    eventClearActiveEvent: '[calendar] Clear active event',\r\n    eventUpdated: '[calendar] Event updated',\r\n    eventDeleted: '[calendar] Event deleted',\r\n    eventLoaded: '[calendar] Event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\nexport const authReducer= ( state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n        \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking:false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    };\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [\r\n    //     {\r\n    //         id: new Date().getTime(),\r\n    //         title:'Cumpleaños del Gama',\r\n    //         start: moment().toDate(),\r\n    //         end: moment().add(2, 'hours').toDate(),\r\n    //         bgcolor: '#fafafa',\r\n    //         notes: 'Comp',\r\n    //         user:{\r\n    //             uid: '12345',\r\n    //             name: 'Branco'\r\n    //         }\r\n    // }\r\n],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n    \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events:state.events.map(event =>(event.id === action.payload.id)? action.payload: event)\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events:state.events.filter(event =>(event.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            };\r\n        \r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') =>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n};\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') =>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token' : token\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type' : 'application/json',\r\n                'x-token' : token\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }\r\n        else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (email, name, password) =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchWithoutToken('auth/register', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }\r\n        else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }\r\n        else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>({type: types.authCheckingFinish});\r\n\r\nconst login = (user) =>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return (dispatch) =>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type:types.authLogout});","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events = []) =>{\r\n\r\n    return events.map(e =>({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch, getState) =>{\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events/', event, 'POST');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Save error', 'error');\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n} \r\n\r\nconst  eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nconst eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartUpdate = (event) =>{\r\n    return async(dispatch) =>{\r\n        try {\r\n\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }   \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () =>({\r\n    type: types.eventDeleted});\r\n\r\nexport const eventStartDelete = () =>{\r\n    return async(dispatch, getState) =>{\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }   \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchWithToken('events/');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.events);\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () =>({type: types.eventLogout});\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/calendar';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n        dispatch(eventLogout());\r\n    }\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                {name}\r\n            </span>\r\n            <button onClick={handleLogout} className='btn btn-outline-danger'>\r\n                <i className='fas fa-sign-out-alt'/>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user:{name}} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title} </strong>\r\n            <br/>\r\n            <span> {name}</span>\r\n        </div>\r\n    )\r\n}\r\n","export const customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () =>({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () =>({\r\n    type:types.uiCloseModal\r\n});","import React, {useEffect, useState} from 'react';\r\nimport { customStyles } from '../../helpers/center-modal-styles';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/calendar';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst endDate = now.clone().add(1, 'hours');\r\n\r\nconst initialState ={\r\n    title: '',\r\n    notes : '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n\r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }\r\n        else{\r\n            setFormValues(initialState);\r\n        }\r\n    }, [activeEvent, setFormValues, ])\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setFormValues({...formValues,\r\n                        [target.name]: target.value});\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initialState);\r\n    }\r\n\r\n    const onChangeStartDate = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues({...formValues,\r\n                        start: e})\r\n    }\r\n\r\n    const onChangeEndDate = (e) =>{\r\n        setDateEnd(e);\r\n        setFormValues({...formValues,\r\n            end: e})\r\n    }\r\n\r\n    const handleSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if( momentStart.isSameOrAfter(momentEnd)){\r\n           return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');  \r\n        }\r\n        if(!/^[a-zA-Z]\\w+((\\s+\\w+)+)?$/.test(title)){\r\n            return setTitleValid(false);\r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h1> {(activeEvent)? 'Editando evento': 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form onSubmit={handleSubmitForm} className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange = {onChangeStartDate}\r\n                        value = {dateStart}\r\n                        className= 'form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange = {onChangeEndDate}\r\n                        value = {dateEnd}\r\n                        minDate={dateStart}\r\n                        className= 'form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${(titleValid)?'is-valid':''}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange = {handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange = {handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary w-100\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/calendar';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleNewEvent = () =>{\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal()); \r\n\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleNewEvent} className='btn btn-primary fab'>\r\n            <i className='fas fa-plus'/>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/calendar';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDelete =  () =>{\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleDelete} className='btn btn-danger fab-danger'>\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import moment from 'moment';\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es-mx';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/calendar';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelect = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event , start, end, isSelected) =>{\r\n\r\n\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id)? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const handleSelectSlot = (e) =>{\r\n//opcional \r\n        activeEvent && dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: '100vh' }}\r\n                messages={messages}\r\n                eventPropGetter = {eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onSelectSlot = {handleSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <AddNewFab/>\r\n            {activeEvent && <DeleteEventFab/>}\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import  {useState} from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [form, setForm] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n        setForm(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setForm({\r\n            ...form,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    return [form, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(email,password));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                autoComplete= 'off'\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                autoComplete= 'off'\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                        <Link className='link' to='/auth/register'>\r\n                            Create new account\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n    });\r\n\r\n    const {email, name, password, passwordConfirm} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(!/^\\w{6,}$/.test(password)){\r\n            return Swal.fire('Error', 'password must be at least 6 uppercase lowercase characters and numbers', 'error');\r\n        }\r\n        else if(password !== passwordConfirm){\r\n            return Swal.fire('Error', 'Passwords do not match. Retry', 'error');\r\n        }\r\n        dispatch(startRegister(email, name, password));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                                name='name'\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                name='email'\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                name='password'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                value={passwordConfirm}\r\n                                onChange={handleInputChange}\r\n                                name='passwordConfirm'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                        <Link className='link' to='/auth/login'>\r\n                             Already registered?\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/\"/> :  <Component {...props}  />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if( checking ){\r\n        return (\r\n        <div className='container-fluid d-flex flex-column justify-content-center align-items-center text-secondary' style={{height:'100vh'}}>\r\n            <div className=\"spinner-border \" style={{width: '6rem', height: '6rem'}} role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        )\r\n      }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={!!uid} path='/auth' component={AuthRouter}/>\r\n                    <PrivateRoute isAuthenticated={!!uid} exact path='/' component={CalendarScreen}/>\r\n\r\n                    <Redirect to='/auth/login'/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}