{"ast":null,"code":"import moment from \"moment\";\nimport { types } from \"../types/types\";\nconst initialState = {\n  events: [{\n    id: new Date().getTime(),\n    title: 'Cumpleaños del Gama',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    bgcolor: '#fafafa',\n    notes: 'Comp',\n    user: {\n      uid: '12345',\n      name: 'Branco'\n    }\n  }],\n  activeEvent: null\n};\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvent: action.payload\n      };\n\n    case types.eventAddNew:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case types.eventClearActiveEvent:\n      return { ...state,\n        activeEvent: null\n      };\n\n    case types.eventUpdated:\n      return { ...state,\n        events: state.events.map(event => event.id === action.payload.id ? action.payload : event)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/reducers/calendarReducer.js"],"names":["moment","types","initialState","events","id","Date","getTime","title","start","toDate","end","add","bgcolor","notes","user","uid","name","activeEvent","calendarReducer","state","action","type","eventSetActive","payload","eventAddNew","eventClearActiveEvent","eventUpdated","map","event"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAAC;AACDC,IAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADH;AAEDC,IAAAA,KAAK,EAAC,qBAFL;AAGDC,IAAAA,KAAK,EAAER,MAAM,GAAGS,MAAT,EAHN;AAIDC,IAAAA,GAAG,EAAEV,MAAM,GAAGW,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyBF,MAAzB,EAJJ;AAKDG,IAAAA,OAAO,EAAE,SALR;AAMDC,IAAAA,KAAK,EAAE,MANN;AAODC,IAAAA,IAAI,EAAC;AACDC,MAAAA,GAAG,EAAE,OADJ;AAEDC,MAAAA,IAAI,EAAE;AAFL;AAPJ,GAAD,CADS;AAajBC,EAAAA,WAAW,EAAE;AAbI,CAArB;AAgBA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAiC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKpB,KAAK,CAACqB,cAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFjB,OAAP;;AAKJ,SAAKtB,KAAK,CAACuB,WAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHhB,QAAAA,MAAM,EAAE,CACJ,GAAGgB,KAAK,CAAChB,MADL,EAEJiB,MAAM,CAACG,OAFH;AAFL,OAAP;;AAQJ,SAAKtB,KAAK,CAACwB,qBAAX;AACI,aAAM,EACF,GAAGN,KADD;AAEFF,QAAAA,WAAW,EAAE;AAFX,OAAN;;AAKJ,SAAKhB,KAAK,CAACyB,YAAX;AACI,aAAM,EACF,GAAGP,KADD;AAEFhB,QAAAA,MAAM,EAACgB,KAAK,CAAChB,MAAN,CAAawB,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACxB,EAAN,KAAagB,MAAM,CAACG,OAAP,CAAenB,EAA7B,GAAkCgB,MAAM,CAACG,OAAzC,GAAkDK,KAA3E;AAFL,OAAN;;AAKJ;AACI,aAAOT,KAAP;AA9BR;AAgCH,CAjCM","sourcesContent":["import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [{\r\n            id: new Date().getTime(),\r\n            title:'Cumpleaños del Gama',\r\n            start: moment().toDate(),\r\n            end: moment().add(2, 'hours').toDate(),\r\n            bgcolor: '#fafafa',\r\n            notes: 'Comp',\r\n            user:{\r\n                uid: '12345',\r\n                name: 'Branco'\r\n            }\r\n    }],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n    \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events:state.events.map(event =>(event.id === action.payload.id)? action.payload: event)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}