{"ast":null,"code":"import { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const eventStartAddNew = event => {\n  return async dispatch => {\n    const resp = await fetchWithToken('events/', event, 'POST');\n    const body = await resp.json();\n  };\n};\n\nconst eventAddNew = event => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = event => ({\n  type: types.eventSetActive,\n  payload: event\n});\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\nexport const eventUpdated = event => ({\n  type: types.eventUpdated,\n  payload: event\n});\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/actions/calendar.js"],"names":["fetchWithToken","types","eventStartAddNew","event","dispatch","resp","body","json","eventAddNew","type","payload","eventSetActive","eventClearActiveEvent","eventUpdated","eventDeleted"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAU;AACtC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,IAAI,GAAG,MAAML,cAAc,CAAC,SAAD,EAAYG,KAAZ,EAAmB,MAAnB,CAAjC;AACA,UAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AACH,GAHD;AAIH,CALM;;AAOP,MAAOC,WAAW,GAAIL,KAAD,KAAY;AAC7BM,EAAAA,IAAI,EAAER,KAAK,CAACO,WADiB;AAE7BE,EAAAA,OAAO,EAAEP;AAFoB,CAAZ,CAArB;;AAKA,OAAO,MAAMQ,cAAc,GAAIR,KAAD,KAAW;AACrCM,EAAAA,IAAI,EAAER,KAAK,CAACU,cADyB;AAErCD,EAAAA,OAAO,EAAEP;AAF4B,CAAX,CAAvB;AAKP,OAAO,MAAMS,qBAAqB,GAAG,OAAM;AACvCH,EAAAA,IAAI,EAAER,KAAK,CAACW;AAD2B,CAAN,CAA9B;AAIP,OAAO,MAAMC,YAAY,GAAIV,KAAD,KAAW;AACnCM,EAAAA,IAAI,EAAER,KAAK,CAACY,YADuB;AAEnCH,EAAAA,OAAO,EAAEP;AAF0B,CAAX,CAArB;AAKP,OAAO,MAAMW,YAAY,GAAG,OAAM;AAC9BL,EAAAA,IAAI,EAAER,KAAK,CAACa;AADkB,CAAN,CAArB","sourcesContent":["import { fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchWithToken('events/', event, 'POST');\r\n        const body = await resp.json();\r\n    }\r\n} \r\n\r\nconst  eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventUpdated = (event) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () =>({\r\n    type: types.eventDeleted});"]},"metadata":{},"sourceType":"module"}