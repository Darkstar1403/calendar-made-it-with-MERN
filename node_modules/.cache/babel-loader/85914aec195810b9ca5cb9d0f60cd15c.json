{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { fetchWithoutToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const startLogin = (email, password) => {\n  return async dispatch => {\n    const resp = await fetchWithoutToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nconst login = user => ({\n  type: types.authLogin,\n  payload: user\n});","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/actions/auth.js"],"names":["Swal","fetchWithoutToken","types","startLogin","email","password","dispatch","resp","body","json","ok","localStorage","setItem","token","Date","getTime","login","uid","name","fire","msg","user","type","authLogin","payload"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC1C,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,IAAI,GAAG,MAAMN,iBAAiB,CAAC,MAAD,EAAS;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAT,EAA4B,MAA5B,CAApC;AACA,UAAMG,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;;AACA,QAAGD,IAAI,CAACE,EAAR,EAAW;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,KAAnC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,IAAIE,IAAJ,GAAWC,OAAX,EAAxC;AAEAT,MAAAA,QAAQ,CAACU,KAAK,CAAC;AACXC,QAAAA,GAAG,EAAET,IAAI,CAACS,GADC;AAEXC,QAAAA,IAAI,EAAEV,IAAI,CAACU;AAFA,OAAD,CAAN,CAAR;AAIH,KARD,MASI;AACAlB,MAAAA,IAAI,CAACmB,IAAL,CAAU,OAAV,EAAmBX,IAAI,CAACY,GAAxB,EAA6B,OAA7B;AACH;AACJ,GAfD;AAgBH,CAjBM;;AAmBP,MAAMJ,KAAK,GAAIK,IAAD,KAAU;AACpBC,EAAAA,IAAI,EAAEpB,KAAK,CAACqB,SADQ;AAEpBC,EAAAA,OAAO,EAAEH;AAFW,CAAV,CAAd","sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }\r\n        else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) =>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});"]},"metadata":{},"sourceType":"module"}