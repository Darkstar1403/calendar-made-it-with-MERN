{"ast":null,"code":"import _defineProperty from\"C:/Users/Branco/Desktop/React/react-09-calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Branco/Desktop/React/react-09-calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Branco/Desktop/React/react-09-calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export var useForm=function useForm(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var reset=function reset(){setForm(initialState);};var handleInputChange=function handleInputChange(_ref){var target=_ref.target;setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},target.name,target.value)));};return[form,handleInputChange,reset];};","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/hooks/useForm.js"],"names":["useState","useForm","initialState","form","setForm","reset","handleInputChange","target","name","value"],"mappings":"+fAAA,OAASA,QAAT,KAAwB,OAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAqB,IAApBC,CAAAA,YAAoB,2DAAP,EAAO,CAExC,cAAwBF,QAAQ,CAACE,YAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAK,CACfD,OAAO,CAACF,YAAD,CAAP,CACH,CAFD,CAIA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAa,IAAXC,CAAAA,MAAW,MAAXA,MAAW,CACnCH,OAAO,gCACAD,IADA,wBAEFI,MAAM,CAACC,IAFL,CAEYD,MAAM,CAACE,KAFnB,GAAP,CAIH,CALD,CAOA,MAAO,CAACN,IAAD,CAAOG,iBAAP,CAA0BD,KAA1B,CAAP,CACH,CAhBM","sourcesContent":["import  {useState} from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [form, setForm] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n        setForm(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setForm({\r\n            ...form,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    return [form, handleInputChange, reset];\r\n}"]},"metadata":{},"sourceType":"module"}