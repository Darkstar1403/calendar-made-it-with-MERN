{"ast":null,"code":"import _slicedToArray from\"C:/Users/Branco/Desktop/React/react-09-calendar-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import moment from'moment';import React,{useEffect,useState}from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import{Navbar}from'../ui/Navbar';import{messages}from'../../helpers/calendar-messages-es';import'react-big-calendar/lib/css/react-big-calendar.css';import'moment/locale/es-mx';import{CalendarEvent}from'./CalendarEvent';import{CalendarModal}from'./CalendarModal';import{useDispatch,useSelector}from'react-redux';import{uiOpenModal}from'../../actions/ui';import{eventClearActiveEvent,eventSetActive,eventStartLoading}from'../../actions/calendar';import{AddNewFab}from'../ui/AddNewFab';import{DeleteEventFab}from'../ui/DeleteEventFab';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";moment.locale('es');var localizer=momentLocalizer(moment);export var CalendarScreen=function CalendarScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.calendar;}),events=_useSelector.events,activeEvent=_useSelector.activeEvent;var _useState=useState(localStorage.getItem('lastView')||'month'),_useState2=_slicedToArray(_useState,2),lastView=_useState2[0],setLastView=_useState2[1];var _useSelector2=useSelector(function(state){return state.auth;}),uid=_useSelector2.uid;useEffect(function(){dispatch(eventStartLoading());},[dispatch]);var onDoubleClick=function onDoubleClick(e){dispatch(uiOpenModal());};var onSelect=function onSelect(e){dispatch(eventSetActive(e));};var onViewChange=function onViewChange(e){setLastView(e);localStorage.setItem('lastView',e);};var eventStyleGetter=function eventStyleGetter(event,start,end,isSelected){var style={backgroundColor:uid===event.user._id?'#367CF7':'#465660',borderRadius:'0px',opacity:0.8,display:'block',color:'white'};return{style:style};};var handleSelectSlot=function handleSelectSlot(e){//opcional \nactiveEvent&&dispatch(eventClearActiveEvent());};return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-screen\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"start\",endAccessor:\"end\",style:{height:'100vh'},messages:messages,eventPropGetter:eventStyleGetter,onDoubleClickEvent:onDoubleClick,onSelectEvent:onSelect,onView:onViewChange,view:lastView,components:{event:CalendarEvent},onSelectSlot:handleSelectSlot,selectable:true}),/*#__PURE__*/_jsx(AddNewFab,{}),activeEvent&&/*#__PURE__*/_jsx(DeleteEventFab,{}),/*#__PURE__*/_jsx(CalendarModal,{})]});};","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/components/calendar/CalendarScreen.js"],"names":["moment","React","useEffect","useState","Calendar","momentLocalizer","Navbar","messages","CalendarEvent","CalendarModal","useDispatch","useSelector","uiOpenModal","eventClearActiveEvent","eventSetActive","eventStartLoading","AddNewFab","DeleteEventFab","locale","localizer","CalendarScreen","dispatch","state","calendar","events","activeEvent","localStorage","getItem","lastView","setLastView","auth","uid","onDoubleClick","e","onSelect","onViewChange","setItem","eventStyleGetter","event","start","end","isSelected","style","backgroundColor","user","_id","borderRadius","opacity","display","color","handleSelectSlot","height"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es-mx';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/calendar';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelect = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event , start, end, isSelected) =>{\r\n\r\n\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id)? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const handleSelectSlot = (e) =>{\r\n//opcional \r\n        activeEvent && dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: '100vh' }}\r\n                messages={messages}\r\n                eventPropGetter = {eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onSelectSlot = {handleSelectSlot}\r\n                selectable={true}\r\n            />\r\n            <AddNewFab/>\r\n            {activeEvent && <DeleteEventFab/>}\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}