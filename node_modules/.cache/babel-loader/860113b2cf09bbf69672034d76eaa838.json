{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Branco\\\\Desktop\\\\React\\\\react-09-calendar-app\\\\src\\\\components\\\\calendar\\\\CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es-mx';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventSetActive } from '../../actions/calendar';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\nconst events = [{\n  title: 'Cumpleaños del Gama',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: '#fafafa',\n  notes: 'Comp',\n  user: {\n    uid: '12345',\n    name: 'Branco'\n  }\n}];\nexport const CalendarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    events\n  } = useSelector(state => state.calendar);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelect = e => {\n    dispatch(eventSetActive(e));\n    dispatch(uiOpenModal());\n  };\n\n  const onViewChange = e => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: '100vh'\n      },\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelect,\n      onView: onViewChange,\n      view: lastView,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddNewFab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalendarScreen, \"CAeBPvO03L0d/rrA0K7zVLN0AYE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["C:/Users/Branco/Desktop/React/react-09-calendar-app/src/components/calendar/CalendarScreen.js"],"names":["moment","React","useState","Calendar","momentLocalizer","Navbar","messages","CalendarEvent","CalendarModal","useDispatch","useSelector","uiOpenModal","eventSetActive","AddNewFab","locale","localizer","events","title","start","toDate","end","add","bgcolor","notes","user","uid","name","CalendarScreen","dispatch","state","calendar","lastView","setLastView","localStorage","getItem","onDoubleClick","e","onSelect","onViewChange","setItem","eventStyleGetter","event","isSelected","style","backgroundColor","borderRadius","opacity","display","color","height"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n\r\nimport React, {useState} from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es-mx';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive } from '../../actions/calendar';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst events = [{\r\n    title:'Cumpleaños del Gama',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comp',\r\n    user:{\r\n        uid: '12345',\r\n        name: 'Branco'\r\n    }\r\n}]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events} = useSelector(state => state.calendar)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelect = (e) =>{\r\n        dispatch(eventSetActive(e));\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onViewChange = (e) =>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event , start, end, isSelected) =>{\r\n        const style = {\r\n            backgroundColor: '#367CF7',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: '100vh' }}\r\n                messages={messages}\r\n                eventPropGetter = {eventStyleGetter}\r\n                onDoubleClickEvent = {onDoubleClick}\r\n                onSelectEvent={onSelect}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewFab/>\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}